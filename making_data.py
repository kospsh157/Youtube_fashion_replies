import re
import pandas as pd
from sklearn.model_selection import train_test_split
fashion_items = '''
    1. "흰색 티셔츠", 0
2. "청바지", 1
3. "겨울 코트", 2
4. "런닝화", 3
5. "목걸이", 4
6. "테니스 스커트", 1
7. "레더 재킷", 2
8. "앵클 부츠", 3
9. "팔찌", 4
10. "스트라이프 셔츠", 0
11. "와이드 팬츠", 1
12. "트렌치 코트", 2
13. "하이힐", 3
14. "귀걸이", 4
15. "폴로 셔츠", 0
16. "슬랙스", 1
17. "패딩 자켓", 2
18. "스니커즈", 3
19. "시계", 4
20. "데님 셔츠", 0
21. "카고 팬츠", 1
22. "블레이저", 2
23. "로퍼", 3
24. "숄", 4
25. "니트 스웨터", 0
26. "레깅스", 1
27. "퍼 코트", 2
28. "워커", 3
29. "벨트", 4
30. "플란넬 셔츠", 0
31. "쇼츠", 1
32. "봄버 자켓", 2
33. "플랫 슈즈", 3
34. "모자", 4
35. "후드 티", 0
36. "미니 스커트", 1
37. "다운 재킷", 2
38. "힐", 3
39. "스카프", 4
40. "캐미솔", 0
41. "치노 팬츠", 1
42. "비니", 4
43. "부츠", 3
44. "클러치", 4
45. "크롭 탑", 0
46. "하렘 팬츠", 1
47. "가디건", 2
48. "플립플롭", 3
49. "핸드백", 4
50. "머슬 티", 0
51. "컬러 레깅스", 1
52. "바람막이", 2
53. "캔버스 슈즈", 3
54. "선글라스", 4
55. "옥스퍼드 셔츠", 0
56. "플레어 스커트", 1
57. "베스트", 2
58. "샌들", 3
59. "토트백", 4
60. "헨리넥 티", 0
61. "퀼로트", 1
62. "레인 코트", 2
63. "키튼 힐", 3
64. "헤어밴드", 4
65. "맨투맨", 0
66. "배기 팬츠", 1
67. "플리스", 2
68. "코르크 힐", 3
69. "반지", 4
70. "슬리브리스", 0
71. "캡리 팬츠", 1
72. "양털 재킷", 2
73. "코트 슈즈", 3
74. "브로치", 4
75. "탱크탑", 0
76. "스웨트팬츠", 1
77. "퀼팅 자켓", 2
78. "에스파듀", 3
79. "체인", 4
80. "보트넥", 0
81. "벨벳 스커트", 1
82. "데님 자켓", 2
83. "메리 제인", 3
84. "코인 퓨스", 4
85. "크루넥", 0
86. "사리", 1
87. "봄베르", 2
88. "뮬", 3
89. "핀", 4
90. "저지", 0
91. "팔라조", 1
92. "더플 코트", 2
93. "오픈 토", 3
94. "커프스", 4
95. "레이스 탑", 0
96. "투투", 1
97. "셔링 재킷", 2
98. "글래디에이터 샌들", 3
99. "암 밴드", 4
100. "라일락", 5

'''
pattern = re.compile(r'"([\uAC00-\uD7A3\s]+)"\s*,\s*(\d+)')


fashion_list = fashion_items.split('\n')

train_data = []

for line in fashion_list:
    # 패턴에 일치하는 모든 부분 찾기
    match = pattern.search(line)
    if match:
        # 추출된 부분을 train_data에 추가
        extracted = (match.group(1).strip(), int(match.group(2)))
        train_data.append(extracted)
        # print(extracted)

# 결과 확인
# print(train_data)


# train_data를 데이터프레임으로 변환
df = pd.DataFrame(train_data, columns=['item', 'label'])

# 훈련 데이터와 검증 데이터로 분할
# test_size=0.2는 전체 데이터의 20%를 검증 데이터로 사용하겠다는 의미입니다.
train_df, validate_df = train_test_split(df, test_size=0.2, shuffle=False)
train_df = train_df.reset_index(drop=True)
validate_df = validate_df.reset_index(drop=True)

print(train_df)
